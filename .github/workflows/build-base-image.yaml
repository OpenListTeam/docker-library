name: Build Base Docker Image
on:
  workflow_dispatch:
    inputs:
      image_name:
        description: 'Docker image name'
        required: false
        default: 'openlist-base-image'
  schedule:
    - cron: '0 20 * * *' # 每天UTC时间20点，即北京时间4点
env:
  IMAGE_PUSH: 'true'

jobs:
  build-base-image:
    name: Release Docker image
    env:
      IMAGE_NAME: ${{ github.event.inputs.image_name || 'openlist-base-image' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        image: ["single","ffmpeg", "aria2", "aio"]
        include:
          - image: "single"
            build_arg: |
              INSTALL_FFMPEG=false
              INSTALL_ARIA2=false
          - image: "ffmpeg"
            build_arg: |
              INSTALL_FFMPEG=true
              INSTALL_ARIA2=false
          - image: "aria2"
            build_arg: |
              INSTALL_FFMPEG=false
              INSTALL_ARIA2=true
          - image: "aio"
            build_arg: |
              INSTALL_FFMPEG=true
              INSTALL_ARIA2=true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - uses: actions/download-artifact@v4
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: 'build/'

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: env.IMAGE_PUSH == 'true'
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: |
            ${{ secrets.DOCKERHUB_USERNAME }}/${{ env.IMAGE_NAME }}
          tags: >
            ${{ github.event_name == 'workflow_dispatch'
                && format('type=raw,value={0}', github.event.inputs.manual_tag)
              || format('type=raw,value={0}', github.ref_name) }}
          flavor: |
            latest=${{ github.event_name == 'push' || github.event.inputs.as_latest == 'true' }}
            ${{ matrix.tag_favor }}

      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          context: ./base
          file: base/Dockerfile
          push: ${{ env.IMAGE_PUSH == 'true' }}
          build-args: ${{ matrix.build_arg }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          platforms: ${{ env.RELEASE_PLATFORMS }}